create type "public"."flow_element_instance_status" as enum ('Created', 'In Progress', 'Completed');

create table "public"."flow_element_instance" (
                                                  "id" bigint generated by default as identity not null,
                                                  "created_at" timestamp with time zone not null default now(),
                                                  "instance_of" bigint not null,
                                                  "status" flow_element_instance_status not null default 'Created'::flow_element_instance_status,
                                                  "is_part_of" bigint not null
);


alter table "public"."flow_element_instance" enable row level security;

create table "public"."process_instance" (
                                             "id" bigint generated by default as identity not null,
                                             "created_at" timestamp with time zone not null default now(),
                                             "process_model_id" bigint not null
);


alter table "public"."process_instance" enable row level security;

CREATE UNIQUE INDEX flow_element_instance_pkey ON public.flow_element_instance USING btree (id);

CREATE UNIQUE INDEX process_instance_pkey ON public.process_instance USING btree (id);

alter table "public"."flow_element_instance" add constraint "flow_element_instance_pkey" PRIMARY KEY using index "flow_element_instance_pkey";

alter table "public"."process_instance" add constraint "process_instance_pkey" PRIMARY KEY using index "process_instance_pkey";

alter table "public"."flow_element_instance" add constraint "public_flow_element_instance_instance_of_fkey" FOREIGN KEY (instance_of) REFERENCES flow_element(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."flow_element_instance" validate constraint "public_flow_element_instance_instance_of_fkey";

alter table "public"."flow_element_instance" add constraint "public_flow_element_instance_is_part_of_fkey" FOREIGN KEY (is_part_of) REFERENCES process_instance(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."flow_element_instance" validate constraint "public_flow_element_instance_is_part_of_fkey";

alter table "public"."process_instance" add constraint "public_process_instance_process_model_id_fkey" FOREIGN KEY (process_model_id) REFERENCES process_model(id) ON UPDATE CASCADE ON DELETE RESTRICT not valid;

alter table "public"."process_instance" validate constraint "public_process_instance_process_model_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.create_process_instance(process_model_id_param bigint)
    RETURNS bigint
    LANGUAGE plpgsql
AS $function$DECLARE
    process_instance_id int8;
    start_element_count INT;
    start_element_id int8;
    end_element_count INT;
BEGIN

    -- Check if the process model has exactly one start element
    SELECT COUNT(*), id INTO start_element_count, start_element_id
    FROM flow_element
    WHERE type = 'startNode' AND model_id = process_model_id_param
    GROUP BY flow_element.id;

    IF start_element_count != 1 THEN
        RAISE EXCEPTION 'Process model must have exactly one start element';
    END IF;

    -- Check if the process model has at least one end element
    SELECT COUNT(*) INTO end_element_count
    FROM flow_element
    WHERE type = 'endNode' AND model_id = process_model_id_param;

    IF end_element_count < 1 THEN
        RAISE EXCEPTION 'Process model must have at least one end element';
    END IF;

    -- Create new process
    INSERT INTO process_instance (process_model_id)
    VALUES (process_model_id_param)
    RETURNING id INTO process_instance_id;

    -- Create start element instance
    INSERT INTO flow_element_instance (instance_of, is_part_of)
    VALUES (start_element_id, process_instance_id);

    -- Return success
    RETURN process_instance_id;
END;$function$
;

grant delete on table "public"."flow_element_instance" to "anon";

grant insert on table "public"."flow_element_instance" to "anon";

grant references on table "public"."flow_element_instance" to "anon";

grant select on table "public"."flow_element_instance" to "anon";

grant trigger on table "public"."flow_element_instance" to "anon";

grant truncate on table "public"."flow_element_instance" to "anon";

grant update on table "public"."flow_element_instance" to "anon";

grant delete on table "public"."flow_element_instance" to "authenticated";

grant insert on table "public"."flow_element_instance" to "authenticated";

grant references on table "public"."flow_element_instance" to "authenticated";

grant select on table "public"."flow_element_instance" to "authenticated";

grant trigger on table "public"."flow_element_instance" to "authenticated";

grant truncate on table "public"."flow_element_instance" to "authenticated";

grant update on table "public"."flow_element_instance" to "authenticated";

grant delete on table "public"."flow_element_instance" to "service_role";

grant insert on table "public"."flow_element_instance" to "service_role";

grant references on table "public"."flow_element_instance" to "service_role";

grant select on table "public"."flow_element_instance" to "service_role";

grant trigger on table "public"."flow_element_instance" to "service_role";

grant truncate on table "public"."flow_element_instance" to "service_role";

grant update on table "public"."flow_element_instance" to "service_role";

grant delete on table "public"."process_instance" to "anon";

grant insert on table "public"."process_instance" to "anon";

grant references on table "public"."process_instance" to "anon";

grant select on table "public"."process_instance" to "anon";

grant trigger on table "public"."process_instance" to "anon";

grant truncate on table "public"."process_instance" to "anon";

grant update on table "public"."process_instance" to "anon";

grant delete on table "public"."process_instance" to "authenticated";

grant insert on table "public"."process_instance" to "authenticated";

grant references on table "public"."process_instance" to "authenticated";

grant select on table "public"."process_instance" to "authenticated";

grant trigger on table "public"."process_instance" to "authenticated";

grant truncate on table "public"."process_instance" to "authenticated";

grant update on table "public"."process_instance" to "authenticated";

grant delete on table "public"."process_instance" to "service_role";

grant insert on table "public"."process_instance" to "service_role";

grant references on table "public"."process_instance" to "service_role";

grant select on table "public"."process_instance" to "service_role";

grant trigger on table "public"."process_instance" to "service_role";

grant truncate on table "public"."process_instance" to "service_role";

grant update on table "public"."process_instance" to "service_role";

create policy "enable all for authenticated users"
    on "public"."flow_element_instance"
    as permissive
    for all
    to authenticated
    using (true);


create policy "enable all for authenticated users"
    on "public"."process_instance"
    as permissive
    for all
    to authenticated
    using (true);
