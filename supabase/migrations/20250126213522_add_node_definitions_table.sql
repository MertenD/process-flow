create table if not exists "public"."node_definition" (
                                            "id" bigint generated by default as identity not null,
                                            "created_at" timestamp with time zone not null default now(),
                                            "definition" jsonb not null default '{}'::jsonb
);


alter table "public"."node_definition" enable row level security;

CREATE UNIQUE INDEX node_definition_pkey ON public.node_definition USING btree (id);

alter table "public"."node_definition" add constraint "node_definition_pkey" PRIMARY KEY using index "node_definition_pkey";

grant delete on table "public"."node_definition" to "anon";

grant insert on table "public"."node_definition" to "anon";

grant references on table "public"."node_definition" to "anon";

grant select on table "public"."node_definition" to "anon";

grant trigger on table "public"."node_definition" to "anon";

grant truncate on table "public"."node_definition" to "anon";

grant update on table "public"."node_definition" to "anon";

grant delete on table "public"."node_definition" to "authenticated";

grant insert on table "public"."node_definition" to "authenticated";

grant references on table "public"."node_definition" to "authenticated";

grant select on table "public"."node_definition" to "authenticated";

grant trigger on table "public"."node_definition" to "authenticated";

grant truncate on table "public"."node_definition" to "authenticated";

grant update on table "public"."node_definition" to "authenticated";

grant delete on table "public"."node_definition" to "service_role";

grant insert on table "public"."node_definition" to "service_role";

grant references on table "public"."node_definition" to "service_role";

grant select on table "public"."node_definition" to "service_role";

grant trigger on table "public"."node_definition" to "service_role";

grant truncate on table "public"."node_definition" to "service_role";

grant update on table "public"."node_definition" to "service_role";

create policy "Enable all for authenticated"
    on "public"."node_definition"
    as permissive
    for all
    to authenticated
    using (true);
