create table IF NOT EXISTS "public"."gamification_event_element" (
                                                       "id" bigint generated by default as identity not null,
                                                       "created_at" timestamp with time zone not null default now(),
                                                       "flow_element_id" bigint not null,
                                                       "next_flow_element_id" bigint,
                                                       "gamification_type" gamification_type not null,
                                                       "gamification_option_id" bigint
);


alter table "public"."gamification_event_element" enable row level security;

create table if not exists "public"."gateway_element" (
                                            "id" bigint generated by default as identity not null,
                                            "created_at" timestamp with time zone not null default now(),
                                            "flow_element_id" bigint not null,
                                            "value1" text not null,
                                            "comparison" comparisons not null,
                                            "value2" text not null,
                                            "next_flow_element_true_id" bigint,
                                            "next_flow_element_false_id" bigint
);


alter table "public"."gateway_element" enable row level security;

CREATE UNIQUE INDEX gamification_event_element_flow_element_id_key ON public.gamification_event_element USING btree (flow_element_id);

CREATE UNIQUE INDEX gamification_event_element_pkey ON public.gamification_event_element USING btree (id);

CREATE UNIQUE INDEX gateway_element_flow_element_id_key ON public.gateway_element USING btree (flow_element_id);

CREATE UNIQUE INDEX gateway_element_pkey ON public.gateway_element USING btree (id);

alter table "public"."gamification_event_element" add constraint "gamification_event_element_pkey" PRIMARY KEY using index "gamification_event_element_pkey";

alter table "public"."gateway_element" add constraint "gateway_element_pkey" PRIMARY KEY using index "gateway_element_pkey";

alter table "public"."gamification_event_element" add constraint "gamification_event_element_flow_element_id_key" UNIQUE using index "gamification_event_element_flow_element_id_key";

alter table "public"."gamification_event_element" add constraint "public_gamification_event_element_flow_element_id_fkey" FOREIGN KEY (flow_element_id) REFERENCES flow_element(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."gamification_event_element" validate constraint "public_gamification_event_element_flow_element_id_fkey";

alter table "public"."gamification_event_element" add constraint "public_gamification_event_element_gamification_option_id_fkey" FOREIGN KEY (gamification_option_id) REFERENCES gamification_option(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."gamification_event_element" validate constraint "public_gamification_event_element_gamification_option_id_fkey";

alter table "public"."gamification_event_element" add constraint "public_gamification_event_element_next_flow_element_id_fkey" FOREIGN KEY (next_flow_element_id) REFERENCES flow_element(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."gamification_event_element" validate constraint "public_gamification_event_element_next_flow_element_id_fkey";

alter table "public"."gateway_element" add constraint "gateway_element_flow_element_id_key" UNIQUE using index "gateway_element_flow_element_id_key";

alter table "public"."gateway_element" add constraint "public_gateway_element_flow_element_id_fkey" FOREIGN KEY (flow_element_id) REFERENCES flow_element(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."gateway_element" validate constraint "public_gateway_element_flow_element_id_fkey";

alter table "public"."gateway_element" add constraint "public_gateway_element_next_flow_element_false_fkey" FOREIGN KEY (next_flow_element_false_id) REFERENCES flow_element(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."gateway_element" validate constraint "public_gateway_element_next_flow_element_false_fkey";

alter table "public"."gateway_element" add constraint "public_gateway_element_next_flow_element_true_fkey" FOREIGN KEY (next_flow_element_true_id) REFERENCES flow_element(id) ON UPDATE CASCADE ON DELETE SET NULL not valid;

alter table "public"."gateway_element" validate constraint "public_gateway_element_next_flow_element_true_fkey";

grant delete on table "public"."gamification_event_element" to "anon";

grant insert on table "public"."gamification_event_element" to "anon";

grant references on table "public"."gamification_event_element" to "anon";

grant select on table "public"."gamification_event_element" to "anon";

grant trigger on table "public"."gamification_event_element" to "anon";

grant truncate on table "public"."gamification_event_element" to "anon";

grant update on table "public"."gamification_event_element" to "anon";

grant delete on table "public"."gamification_event_element" to "authenticated";

grant insert on table "public"."gamification_event_element" to "authenticated";

grant references on table "public"."gamification_event_element" to "authenticated";

grant select on table "public"."gamification_event_element" to "authenticated";

grant trigger on table "public"."gamification_event_element" to "authenticated";

grant truncate on table "public"."gamification_event_element" to "authenticated";

grant update on table "public"."gamification_event_element" to "authenticated";

grant delete on table "public"."gamification_event_element" to "service_role";

grant insert on table "public"."gamification_event_element" to "service_role";

grant references on table "public"."gamification_event_element" to "service_role";

grant select on table "public"."gamification_event_element" to "service_role";

grant trigger on table "public"."gamification_event_element" to "service_role";

grant truncate on table "public"."gamification_event_element" to "service_role";

grant update on table "public"."gamification_event_element" to "service_role";

grant delete on table "public"."gateway_element" to "anon";

grant insert on table "public"."gateway_element" to "anon";

grant references on table "public"."gateway_element" to "anon";

grant select on table "public"."gateway_element" to "anon";

grant trigger on table "public"."gateway_element" to "anon";

grant truncate on table "public"."gateway_element" to "anon";

grant update on table "public"."gateway_element" to "anon";

grant delete on table "public"."gateway_element" to "authenticated";

grant insert on table "public"."gateway_element" to "authenticated";

grant references on table "public"."gateway_element" to "authenticated";

grant select on table "public"."gateway_element" to "authenticated";

grant trigger on table "public"."gateway_element" to "authenticated";

grant truncate on table "public"."gateway_element" to "authenticated";

grant update on table "public"."gateway_element" to "authenticated";

grant delete on table "public"."gateway_element" to "service_role";

grant insert on table "public"."gateway_element" to "service_role";

grant references on table "public"."gateway_element" to "service_role";

grant select on table "public"."gateway_element" to "service_role";

grant trigger on table "public"."gateway_element" to "service_role";

grant truncate on table "public"."gateway_element" to "service_role";

grant update on table "public"."gateway_element" to "service_role";

create policy "Enable all for authenticated users"
on "public"."gamification_event_element"
as permissive
for all
to authenticated
using (true);


create policy "Enable all for authenticated users"
on "public"."gateway_element"
as permissive
for all
to authenticated
using (true);


create policy "Enable insert for authenticated users"
on "public"."process_model"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable insert for authenticated users"
on "public"."profile_role_team"
as permissive
for insert
to authenticated
with check (true);


create policy "enable insert access for authenticated users"
on "public"."role"
as permissive
for insert
to authenticated
with check (true);
